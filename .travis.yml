branches:
  only:
    - master
    - /^v?[0-9]/

language: cpp
compiler: gcc

filter_secrets: false

os:
- linux
- osx
  osx_image: xcode10.1
- windows

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - g++-7
      - libudev-dev
      - ninja-build
  homebrew:
    packages:
      - ninja

env:
  global:
  - NODE_ARCH="64"
  matrix:
  - NODE_VERSION="8.15.0"
  - NODE_VERSION="10.15.0"
  - NODE_VERSION="11.7.0"
  - NODE_VERSION="8.15.0" npm_config_runtime="electron" npm_config_target="2.0.6" npm_config_disturl="https://atom.io/download/electron"
  - NODE_VERSION="10.15.0" npm_config_runtime="electron" npm_config_target="4.0.1" npm_config_disturl="https://atom.io/download/electron"

matrix:
  include:
  - os: windows
    env: NODE_ARCH="32" NODE_VERSION="8.15.0"
  - os: windows
    env: NODE_ARCH="32" NODE_VERSION="10.15.0"
  - os: windows
    env: NODE_ARCH="32" NODE_VERSION="11.7.0"
  - os: windows
    env: NODE_ARCH="32" NODE_VERSION="8.15.0" npm_config_runtime="electron" npm_config_target="2.0.6" npm_config_disturl="https://atom.io/download/electron"
  - os: windows
    env: NODE_ARCH="32" NODE_VERSION="10.15.0" npm_config_runtime="electron" npm_config_target="4.0.1" npm_config_disturl="https://atom.io/download/electron"

before_install:
- git clone --branch master https://github.com/Microsoft/vcpkg.git
- |
  if [ $TRAVIS_OS_NAME == "linux" ]; then
    export CC=gcc-7
    export CXX=g++-7
  fi
- |
  if [ $TRAVIS_OS_NAME == "windows" ]; then
    choco install -y nvm
    export NVM_HOME="C:\ProgramData\nvm"
    export NVM_SYMLINK="C:\Program Files\nodejs"
    export PATH=$PATH:$NVM_HOME:$NVM_SYMLINK
    nvm install $NODE_VERSION $NODE_ARCH
    nvm use $NODE_VERSION $NODE_ARCH
    ./vcpkg/bootstrap-vcpkg.bat
    npm install --scripts-prepend-node-path=true --global --vs2015 --production windows-build-tools
    npm config set msvs_version 2015
  else
    nvm install $NODE_VERSION
    nvm use $NODE_VERSION
    ./vcpkg/bootstrap-vcpkg.sh
  fi
  ./vcpkg/vcpkg install boost-thread boost-system boost-regex boost-date-time boost-chrono boost-asio
  npm config set cmake_CMAKE_TOOLCHAIN_FILE=$(pwd)/vcpkg/scripts/buildsystems/vcpkg.cmake

script:
- npm install
- npm run package-prebuilt
- echo tag=$TRAVIS_TAG pullrequest=$TRAVIS_PULL_REQUEST
- |
    if [[ "$TRAVIS_TAG" =~ ^v?[0-9] ]] && [[ "$TRAVIS_PULL_REQUEST" == "false" ]]; then
      npm run publish-prebuilt
    fi
